chapter,title,problem,answer
3-2,최대공약수 찾기,"유클리드 호제법이라는 방법을 통해 두 정수의 최대공약수를 찾을 수 있습니다. 큰 수를 작은 수로 나누어서 나온 나머지로 다시 작은 수를 나누는 과정을 나머지가 0이 나올 때까지 반복하면, 직전의 작은 수가 최대공약수가 됩니다. 예시로 126과 75의 최대공약수를 구해 보면, 3이 나옵니다:\n126 % 75 => 51\n75 % 51 => 24\n51 % 24 => 3\n24 % 3 => 0\n이렇게 유클리드 호제법을 이용해서 354748과 491512의 최대공약수를 구하는 코드를 작성해 보세요.\n\n사용을 추천하는 함수: max(), min()",524
3-2,신상 카드 보관함,"당신은 어느 시설의 관리인으로 회원들의 신상 정보 카드를 보유하고 있습니다. 마침 보관함이 생겨서 보관함들에 알파벳 하나씩을 붙이고, 카드들을 사람 이름의 첫 글자에 따라 해당하는 보관함에 보관하려 합니다. 다만 보관함 수를 줄이고자 Q로 시작하는 것은 P와 함께, X, Y, Z로 시작하는 것은 W와 함께 보관하려 하고, 또 S로 시작하는 것이 많아서 두 번째 글자가 A부터 M까지인지, N부터 Z까지인지에 따라 반을 나누기로 했습니다. 이들 보관함에는 각각 PQ, WXYZ, Sa-Sm, Sn-Sz라는 이름을 붙이기로  했습니다.\n다음 인명의 목록에서, 각 사람에 해당하는 보관함의 이름을 출력하는 코드를 작성해 보세요(각 줄마다 캐비닛의 이름은 하나씩 출력되어야 합니다).\n목록: [""Carson"", ""Martin"", ""Quinn"", ""Howard"", ""James"", ""Franklin"", ""Xavier"", ""Sue"", ""William"", ""Igor"", ""Benjamin"", ""Gilbert"", ""Samuel"", ""Kevin""]\n\n사용을 추천하는 함수: ord() - 문자의 코드값을 출력합니다. 대문자는 ""A""부터 65로, 소문자는 ""a""부터 97로 시작합니다.\n--------\n캐비닛 이름 예시\n--------\nAlbert	| A\nIvan 	| I\nPenn 	| PQ\nSimpson	| Sa-Sm\nUlysses	| U\nYves 	| WXYZ\n--------","C\nM\nPQ\nH\nJ\nF\nWXYZ\nSn-Sz\nWXYZ\nI\nB\nG\nSa-Sm\nK"
3-3,행렬의 곱셈,"3중 for문을 이용해서, 다음 두 행렬의 곱을 구하세요. 행렬은 2차원 배열로 나타내면 사용하기 편리합니다.\nA = [\n[15,	15,	8,	0,	6,	18,	-10,	19],\n[5,	-4,	15,	-16,	-12,	-15,	17,	3],\n[20,	7,	-12,	7,	17,	12,	-9,	6],\n[-5,	-19,	-13,	-3,	-2,	-16,	13,	-7],\n[14,	-7,	-10,	-2,	9,	8,	-14,	-18],\n[-8,	-19,	7,	4,	14,	15,	-5,	-20],\n[-7,	-17,	-14,	-13,	-17,	-15,	-5,	-13],\n[6,	-1,	20,	-12,	-13,	5,	9,	4]\n]\nB = [\n[15,	5,	-18,	-12,	-13,	-2,	5,	-3],\n[9,	-8,	3,	-11,	-2,	19,	9,	12],\n[19,	11,	-4,	-14,	-2,	-14,	17,	-17],\n[12,	14,	19,	17,	-10,	4,	-4,	-2],\n[-9,	18,	5,	12,	-9,	-5,	-2,	14],\n[20,	14,	-5,	-2,	-11,	15,	14,	11],\n[-8,	-18,	-2,	15,	0,	-20,	-3,	7],\n[17,	-1,	-6,	-1,	-1,	-13,	-8,	-20]\n]\n\n출력은 결과로 나온 2차원 배열(리스트)을 그대로 print()에 넣어 주세요.\n\n사용을 추천하는 함수: len() - 리스트나 문자열 등의 길이를 얻을 수 있습니다. 여기서는 행렬의 크기를 얻는 데에 쓰일 수 있을 것입니다.","[[1221, 564, -411, -590, -512, 336, 464, -169], [-145, -737, -503, -360, 343, -904, 47, -560], [480, 640, -151, 9, -611, 486, 44, 401], [-1054, -545, 114, 610, 360, -580, -608, 41], [-182, 532, -130, -85, -279, 560, 125, 524], [-236, 817, 260, 358, -183, 88, 249, 395], [-1008, -648, -38, 10, 614, -36, -431, -97], [530, -240, -551, -580, 62, -451, 446, -490]]"
